@font-face {
  font-family: 'Handwritten';
  src: url('../fonts/handwritten.ttf') format('truetype');
}

@font-face {
  font-family: 'Redacted';
  src: url('../fonts/redacted.ttf') format('truetype');
}

* {
  cursor: default;
  font-family: 'Handwritten';
  font-size: 20pt;
}

a {
  color: black;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

body.in-game {
  bottom: 0;
  display: flex;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

body.pre-game {
  padding: 1em 0;
}

.hex {
  background-image: url('../images/hex.svg');
  clip-path: polygon(0 50%, 30% 0, 70% 0, 100% 50%, 70% 100%, 30% 100%);
  cursor: pointer;
  flex-shrink: 0;
  height: 60px;
  position: relative;
  width: 80px;
}

.hex + .hex {
  margin-left: 40px;
}

.hex.void {
  background-image: url('../images/hex-void.svg');
}

.hex-row {
  display: flex;
}

.hex-row + .hex-row {
  margin-top: -27px;
}

.hex-row:nth-of-type(2n - 1) {
  margin-left: 60px;
}

.map {
  margin: auto auto;
}

.player {
  background-image: url('../images/player.svg');
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  height: 100%;
  width: 100%;
}

.square {
  background-image: url(../images/square.svg);
  background-size: 100% 100%;
  padding: 0.25em 0.5em;
}

.square.can-click {
  background-image: url(../images/square-blue.svg);
  cursor: pointer;
}

.square.can-edit {
  background-image: url(../images/square-green.svg);
  cursor: text;
}

.square.can-expand {
  background-image: url(../images/square-green.svg);
  cursor: pointer;
  position: relative;
  padding-right: 1.5em;
}

.square.can-expand::after {
  content: 'â–¾';
  position: absolute;
  right: 0.5em;
  top: 50%;
  transform: translateY(-50%);
}

h1 {
  padding: 1em 0;
  text-align: center;
}

h2 {
  padding: 0.5em 0;
  text-align: center;
}

.redacted-image {
  background-image: url(../images/redacted.svg);
  background-position: center;
  background-size: cover;
}

.redacted-text {
  font-family: 'Redacted';
}
